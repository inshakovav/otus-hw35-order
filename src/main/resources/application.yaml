server:
  port: 8081

app:
  kafka:
    message-group-name: order-group
    order-created-topic: hw35.order.created
    payment-executed-topic: hw35.payment.executed
    payment-rejected-topic: hw35.payment.rejected

spring:
  application:
    name: order

  datasource:
    url: jdbc:postgresql://my-db-postgresql.default.svc.cluster.local:5432/db_otus_30
    username: ${DB_USER}
    password: ${DB_PASS}
    hikari:
      leak-detection-threshold: 10000
  flyway:
    enabled: true
    schemas: order_scheme

  kafka:
    bootstrap-servers: my-kafka.default.svc.cluster.local:9092
    consumer:
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"
    template:
      default-topic: my-topic
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer

logging:
  level:
    org:
      apache:
        kafka: OFF



